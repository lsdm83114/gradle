[
  {
    "login": "Spaceghost",
    "id": 251370,
    "node_id": "MDQ6VXNlcjI1MTM3MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/251370?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Spaceghost",
    "html_url": "https://github.com/Spaceghost",
    "followers_url": "https://api.github.com/users/Spaceghost/followers",
    "following_url": "https://api.github.com/users/Spaceghost/following{/other_user}",
    "gists_url": "https://api.github.com/users/Spaceghost/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Spaceghost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Spaceghost/subscriptions",
    "organizations_url": "https://api.github.com/users/Spaceghost/orgs",
    "repos_url": "https://api.github.com/users/Spaceghost/repos",
    "events_url": "https://api.github.com/users/Spaceghost/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Spaceghost/received_events",
    "type": "User",
    "site_admin": false,
    "contributions": 1
  },
  {
    "login": "octocat",
    "id": 583231,
    "node_id": "MDQ6VXNlcjU4MzIzMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/583231?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/octocat",
    "html_url": "https://github.com/octocat",
    "followers_url": "https://api.github.com/users/octocat/followers",
    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
    "organizations_url": "https://api.github.com/users/octocat/orgs",
    "repos_url": "https://api.github.com/users/octocat/repos",
    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/octocat/received_events",
    "type": "User",
    "site_admin": false,
    "contributions": 1
  },
  {
    "login": "Cameron423698",
    "id": 94719050,
    "node_id": "U_kgDOBaVMSg",
    "avatar_url": "https://avatars.githubusercontent.com/u/94719050?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cameron423698",
    "html_url": "https://github.com/Cameron423698",
    "followers_url": "https://api.github.com/users/Cameron423698/followers",
    "following_url": "https://api.github.com/users/Cameron423698/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cameron423698/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cameron423698/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cameron423698/subscriptions",
    "organizations_url": "https://api.github.com/users/Cameron423698/orgs",
    "repos_url": "https://api.github.com/users/Cameron423698/repos",
    "events_url": "https://api.github.com/users/Cameron423698/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cameron423698/received_events",
    "type": "User",
    "site_admin": false,
    "contributions": 1
  }
]
# -*- mode: yaml -*-
manifest:
  version: 1.0

# The `automations` section lists automations to run on PRs in this repository.
# Each automation has an `if` key that defines conditions to run the automation,
# as well as a `run` key with the actions to do. All the conditions need to be true
# for the actions to run (there is an implicit AND relation between
# the conditions on each line).  Each condition is specified as a Jinja expression.  You
# can also use the constant `true` if you want to always run the actions.

# Each automation is independent of the others.  Every time one of the `on` conditions match for
# this PR, this automations will have its `if` checked to run.  In a way, the `on` conditions
# function as an implicit first `if` for every automation in the file.

# You can define multiple automations in a .cm file, but each automation name should be unique
# within the file.  We keep each automation (or very closely related group of automations) in
# its own file.

on:
  - pr_created

automations:

  # If a PR is very complex, require 2 approvals
  complex_change:
    if:
      - {{ author.using_gitstream }}
      - {{ branch | estimatedReviewTime >= 40 }}
      - {{ files | length >= 50 }}
      - {{ includes_src_changes }}
    run:
      - action: set-required-approvals@v1
        args:
          approvals: 2

# To simplify the automations section, some calculations are placed under unique YAML keys defined here.
# Read the "|" not as "or", but as a "pipe", taking the output of the previous command and passing it to the next command.
# This section could also appear ahead of the automations section.

includes_src_changes: {{ files | match(regex=r/.*\/src\//) | some }}

author:
  using_gitstream: {{ (pr.author | isEnabledUser ) }}
